---
import { formatDate } from "../utils/format-date";

import {type CollectionEntry} from "astro:content"
import {Image} from "astro:assets"

type Props = {
    post: CollectionEntry<"posts">
}

const {post} = Astro.props

post.data.date = formatDate(post.data.date)
---

<!-- We are going to introduce the tags as metadata to filter the posts later on. -->
<article class="post box-border box-shadow mb-12 bg-dungeon-900" data-tags={post.data.tags.join(",")}>
    <a href={`/blog/${post.slug}`} class="flex flex-col md:flex-row md:min-h-80">
        <Image
            src={post.data.image}
            alt={post.data.title}
            width={800}
            height={450}
            format="webp"
            class="aspect-thumbnail object-cover border-r-2 border-black w-full md:w-1/2"
        />
        <div class="flex flex-1 flex-col justify-between p-8">
        
                <div class="flex space-x-1 pb-1 text-sm text-gray-200">
                    <time datetime={post.data.date}>{post.data.date}</time>
                    <span aria-hidden="true">Â·</span>
                    <span>By {post.data.author}</span>
                </div>

                <h1 class="text-xl lg:text-3xl text-white">
                    {post.data.title}
                </h1>

                <p class="mt-3 text-base lg:text-xl text-gray-200">
                    {post.data.description}
                </p>

                <!--
                <div class="flex flex-wrap items-center mt-4 gap-3">
                    {post.data.tags.map((tag) => (
                        <span
                            class="px-3 py-1 text-xs lg:text-sm font-semibold text-gray-800 bg-gray-300 rounded-full"
                        >
                            #{tag}
                        </span>
                    ))}
                </div>
                 -->
                 <div></div>
            
        </div>
    </a>
</article>

<style>
    .box-border{
        border: 2px solid black;
    }
    .bottom-border{
        border-bottom: 2px solid black;
    }
    .box-shadow{
        --tw-shadow: 10px 10px;
        --tw-shadow-colored: 10px 10px var(--tw-shadow-color);
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow);
        transition-duration: 0.15s;
    }
    .box-shadow:hover{
        --tw-shadow: 0px 0px;
    }
</style>